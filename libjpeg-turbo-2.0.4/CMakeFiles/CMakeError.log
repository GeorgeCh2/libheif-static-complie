Performing C SOURCE FILE Test RIGHT_SHIFT_IS_UNSIGNED failed with the following compile output:
Change Dir: /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_77ffb/fast && /Library/Developer/CommandLineTools/usr/bin/make  -f CMakeFiles/cmTC_77ffb.dir/build.make CMakeFiles/cmTC_77ffb.dir/build
Building C object CMakeFiles/cmTC_77ffb.dir/src.c.o
/Library/Developer/CommandLineTools/usr/bin/cc   -DRIGHT_SHIFT_IS_UNSIGNED -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk   -o CMakeFiles/cmTC_77ffb.dir/src.c.o   -c /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp/src.c
/Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp/src.c:10:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        res |= (~0L) << (32-4);
               ~~~~~ ^
1 warning generated.
Linking C executable cmTC_77ffb
/usr/local/Cellar/cmake/3.17.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_77ffb.dir/link.txt --verbose=1
/Library/Developer/CommandLineTools/usr/bin/cc  -DRIGHT_SHIFT_IS_UNSIGNED -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_77ffb.dir/src.c.o  -o cmTC_77ffb 


...and run output:

Return value: 1
Source file was:

      #include <stdio.h>
      #include <stdlib.h>
      int is_shifting_signed (long arg) {
        long res = arg >> 4;
        if (res == -0x7F7E80CL)
          return 1; /* right shift is signed */
        /* see if unsigned-shift hack will fix it. */
        /* we can't just test exact value since it depends on width of long... */
        res |= (~0L) << (32-4);
        if (res == -0x7F7E80CL)
          return 0; /* right shift is unsigned */
        printf("Right shift isn't acting as I expect it to.\n");
        printf("I fear the JPEG software will not work at all.\n\n");
        return 0; /* try it with unsigned anyway */
      }
      int main (void) {
        exit(is_shifting_signed(-0x7F7E80B1L));
      }
Performing C SOURCE FILE Test __CHAR_UNSIGNED__ failed with the following compile output:
Change Dir: /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_fa45d/fast && /Library/Developer/CommandLineTools/usr/bin/make  -f CMakeFiles/cmTC_fa45d.dir/build.make CMakeFiles/cmTC_fa45d.dir/build
Building C object CMakeFiles/cmTC_fa45d.dir/src.c.o
/Library/Developer/CommandLineTools/usr/bin/cc   -D__CHAR_UNSIGNED__ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk   -o CMakeFiles/cmTC_fa45d.dir/src.c.o   -c /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_fa45d
/usr/local/Cellar/cmake/3.17.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fa45d.dir/link.txt --verbose=1
/Library/Developer/CommandLineTools/usr/bin/cc  -D__CHAR_UNSIGNED__ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_fa45d.dir/src.c.o  -o cmTC_fa45d 


...and run output:

Return value: 1
Source file was:
int main(void) { return ((char) -1 < 0); }
Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is Clang using "--version" did not match "(clang version)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is AppleClang using "--version" did not match "(Apple LLVM version)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is ARMClang using "--version" did not match "armclang":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
yasm: warning: unrecognized option `-V'
yasm: No input files specified
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
yasm: warning: unrecognized option `-V'
yasm: No input files specified
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
yasm: warning: unrecognized option `-qversion'
yasm: No input files specified
Checking whether the ASM_NASM compiler is MSVC using "-?" did not match "Microsoft":
yasm: warning: unrecognized option `-?'
yasm: No input files specified
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
usage: yasm [option]* file
Options:
    --version               show version text
    --license               show license text
    -h, --help              show help text
    --arch=<arch>           select architecture (list with -a help)
     -a <arch>
    --parser=<parser>       select parser (list with -p help)
     -p <parser>
    --preproc=<preproc>     select preprocessor (list with -r help)
     -r <preproc>
    --oformat=<format>      select object format (list with -f help)
     -f <format>
    --dformat=<debug>       select debugging format (list with -g help)
     -g <debug>
    --lformat=<list>        select list format (list with -L help)
     -L <list>
    --list=<listfile>       name of list-file output
     -l <listfile>
    --objfile=<filename>    name of object-file output
     -o <filename>
    --mapfile=<filename>    name of map-file output
    --machine=<machine>     select machine (list with -m help)
     -m <machine>
    --force-strict          treat all sized operands as if `strict' was used
    -w                      inhibits warning messages
    -W                      enables/disables warning
    -M                      generate Makefile dependencies on stdout
    -E <file>               redirect error messages to file
    -s                      redirect error messages to stdout
    -e, --preproc-only      preprocess only (writes output to stdout by default)
    -i <path>               add include path
    -I <path>               add include path
    -P <filename>           pre-include file
    -d <macro[=value]>      pre-define a macro, optionally to value
    -D <macro[=value]>      pre-define a macro, optionally to value
    -u <macro>              undefine a macro
    -U <macro>              undefine a macro
    -X <style>              select error/warning message style (`gnu' or `vc')
    --prefix=<prefix>       prepend argument to name of all external symbols
    --suffix=<suffix>       append argument to name of all external symbols
    --postfix=<suffix>      append argument to name of all external symbols

Files are asm sources to be assembled.

Sample invocation:
   yasm -f elf -o object.o source.asm

Report bugs to bug-yasm@tortall.net
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
yasm: No input files specified
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
yasm: No input files specified
Checking whether the ASM_NASM compiler is NASM using "-v" did not match "(NASM version)":
yasm: warning: unrecognized option `-v'
yasm: No input files specified
Performing C SOURCE FILE Test RIGHT_SHIFT_IS_UNSIGNED failed with the following compile output:
Change Dir: /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_65702/fast && /Library/Developer/CommandLineTools/usr/bin/make  -f CMakeFiles/cmTC_65702.dir/build.make CMakeFiles/cmTC_65702.dir/build
Building C object CMakeFiles/cmTC_65702.dir/src.c.o
/Library/Developer/CommandLineTools/usr/bin/cc   -DRIGHT_SHIFT_IS_UNSIGNED -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk   -o CMakeFiles/cmTC_65702.dir/src.c.o   -c /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp/src.c
/Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp/src.c:10:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        res |= (~0L) << (32-4);
               ~~~~~ ^
1 warning generated.
Linking C executable cmTC_65702
/usr/local/Cellar/cmake/3.17.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_65702.dir/link.txt --verbose=1
/Library/Developer/CommandLineTools/usr/bin/cc  -DRIGHT_SHIFT_IS_UNSIGNED -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_65702.dir/src.c.o  -o cmTC_65702 


...and run output:

Return value: 1
Source file was:

      #include <stdio.h>
      #include <stdlib.h>
      int is_shifting_signed (long arg) {
        long res = arg >> 4;
        if (res == -0x7F7E80CL)
          return 1; /* right shift is signed */
        /* see if unsigned-shift hack will fix it. */
        /* we can't just test exact value since it depends on width of long... */
        res |= (~0L) << (32-4);
        if (res == -0x7F7E80CL)
          return 0; /* right shift is unsigned */
        printf("Right shift isn't acting as I expect it to.\n");
        printf("I fear the JPEG software will not work at all.\n\n");
        return 0; /* try it with unsigned anyway */
      }
      int main (void) {
        exit(is_shifting_signed(-0x7F7E80B1L));
      }
Performing C SOURCE FILE Test __CHAR_UNSIGNED__ failed with the following compile output:
Change Dir: /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_42d89/fast && /Library/Developer/CommandLineTools/usr/bin/make  -f CMakeFiles/cmTC_42d89.dir/build.make CMakeFiles/cmTC_42d89.dir/build
Building C object CMakeFiles/cmTC_42d89.dir/src.c.o
/Library/Developer/CommandLineTools/usr/bin/cc   -D__CHAR_UNSIGNED__ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk   -o CMakeFiles/cmTC_42d89.dir/src.c.o   -c /Users/georgezhou/Downloads/heif/libjpeg-turbo-2.0.4/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_42d89
/usr/local/Cellar/cmake/3.17.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_42d89.dir/link.txt --verbose=1
/Library/Developer/CommandLineTools/usr/bin/cc  -D__CHAR_UNSIGNED__ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_42d89.dir/src.c.o  -o cmTC_42d89 


...and run output:

Return value: 1
Source file was:
int main(void) { return ((char) -1 < 0); }
Checking whether the ASM_NASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is Clang using "--version" did not match "(clang version)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is AppleClang using "--version" did not match "(Apple LLVM version)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is ARMClang using "--version" did not match "armclang":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is HP using "-V" did not match "HP C":
yasm: warning: unrecognized option `-V'
yasm: No input files specified
Checking whether the ASM_NASM compiler is Intel using "--version" did not match "(ICC)":
yasm 1.3.0
Compiled on Dec 20 2019.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
Checking whether the ASM_NASM compiler is SunPro using "-V" did not match "Sun C":
yasm: warning: unrecognized option `-V'
yasm: No input files specified
Checking whether the ASM_NASM compiler is XL using "-qversion" did not match "XL C":
yasm: warning: unrecognized option `-qversion'
yasm: No input files specified
Checking whether the ASM_NASM compiler is MSVC using "-?" did not match "Microsoft":
yasm: warning: unrecognized option `-?'
yasm: No input files specified
Checking whether the ASM_NASM compiler is TI using "-h" did not match "Texas Instruments":
usage: yasm [option]* file
Options:
    --version               show version text
    --license               show license text
    -h, --help              show help text
    --arch=<arch>           select architecture (list with -a help)
     -a <arch>
    --parser=<parser>       select parser (list with -p help)
     -p <parser>
    --preproc=<preproc>     select preprocessor (list with -r help)
     -r <preproc>
    --oformat=<format>      select object format (list with -f help)
     -f <format>
    --dformat=<debug>       select debugging format (list with -g help)
     -g <debug>
    --lformat=<list>        select list format (list with -L help)
     -L <list>
    --list=<listfile>       name of list-file output
     -l <listfile>
    --objfile=<filename>    name of object-file output
     -o <filename>
    --mapfile=<filename>    name of map-file output
    --machine=<machine>     select machine (list with -m help)
     -m <machine>
    --force-strict          treat all sized operands as if `strict' was used
    -w                      inhibits warning messages
    -W                      enables/disables warning
    -M                      generate Makefile dependencies on stdout
    -E <file>               redirect error messages to file
    -s                      redirect error messages to stdout
    -e, --preproc-only      preprocess only (writes output to stdout by default)
    -i <path>               add include path
    -I <path>               add include path
    -P <filename>           pre-include file
    -d <macro[=value]>      pre-define a macro, optionally to value
    -D <macro[=value]>      pre-define a macro, optionally to value
    -u <macro>              undefine a macro
    -U <macro>              undefine a macro
    -X <style>              select error/warning message style (`gnu' or `vc')
    --prefix=<prefix>       prepend argument to name of all external symbols
    --suffix=<suffix>       append argument to name of all external symbols
    --postfix=<suffix>      append argument to name of all external symbols

Files are asm sources to be assembled.

Sample invocation:
   yasm -f elf -o object.o source.asm

Report bugs to bug-yasm@tortall.net
Checking whether the ASM_NASM compiler is IAR using "" did not match "IAR Assembler":
yasm: No input files specified
Checking whether the ASM_NASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
yasm: No input files specified
Checking whether the ASM_NASM compiler is NASM using "-v" did not match "(NASM version)":
yasm: warning: unrecognized option `-v'
yasm: No input files specified
